<Project>

  <PropertyGroup>
    <!-- 
      the supposedly built-in $(SolutionDir) macro in MSBuild is confusing,
      not always defined, there are issues with IDE vs command-line, etc so
      we define our own alternative

      this file is in ~/src and the solution is one level up
    -->
    <SolutionDirectory>$(MSBuildThisFileDirectory)/..</SolutionDirectory>
  </PropertyGroup>

  <!-- import our targets (once) -->
  <PropertyGroup><HazelcastTargets>true</HazelcastTargets></PropertyGroup>
  <Import Project="Directory.Build.targets" Condition="'$(HazelcastTargets)' == ''"/>
  <Import Project="$(SolutionDirectory)/build/AnalysisRules.props" />

  <PropertyGroup>
    <GitRepositoryRemoteName></GitRepositoryRemoteName>
  </PropertyGroup>

  <PropertyGroup>
    <!-- Kill NuGet 'HTTPS Everywhere' warning -->
    <NoWarn>$(NoWarn);NU1803</NoWarn>
    <!-- Kill EolTargetFrameworks warning -->
    <NoWarn>$(NoWarn);NETSDK1138</NoWarn>
  </PropertyGroup>

    <!-- populate GitRepositoryRemoteName (does not have to be 'origin') -->
  <Target Name="GetGitRepositoryRemoteName" BeforeTargets="BeforeBuild" Condition="'$(GitRepositoryRemoteName)'==''">
    <GetGitRepositoryRemoteName GitRepositoryRemoteUrl="https://github.com/hazelcast/hazelcast-csharp-client.git">
      <Output TaskParameter="GitRepositoryRemoteName" PropertyName="GitRepositoryRemoteName" />
    </GetGitRepositoryRemoteName>
    <!--<Message Importance="High" Text="GitRepositoryRemoteName='$(GitRepositoryRemoteName)'" />-->
  </Target>

  <!--
    note that project files that define constants must do so as
    <DefineConstants>$(DefineConstants);TRACE</DefineConstants>
  -->

  <PropertyGroup Condition="'$(ASSEMBLY_SIGNING)'=='true'">
    <DefineAssemblySigning>;ASSEMBLY_SIGNING</DefineAssemblySigning>
  </PropertyGroup>
  <PropertyGroup Condition="'$(ASSEMBLY_SIGNING)'==''">
    <DefineAssemblySigning></DefineAssemblySigning>
  </PropertyGroup>

  <!--
    DEFINES
    - HZ_CONSOLE enables the Hazelcast troubleshooting console
        do *not* ship a release with HZ_CONSOLE defined!
    - HZ_CONSOLE_PUBLIC publicizes the HConsole
    - CODE_ANALYSIS enables NDepend code analysis
    - HZ_OPTIMIZE_ASYNC enables async/await optimizations
  -->
  <PropertyGroup Condition="'$(Configuration)'=='Debug'">
    <DefineConstants>HZ_CONSOLE;CODE_ANALYSIS;TRACE$(DefineAssemblySigning);$(DefineUserConstants)</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)'=='Release'">
    <DefineConstants>$(DefineAssemblySigning);$(DefineUserConstants)</DefineConstants>
  </PropertyGroup>

  <!-- misc project options -->
  <PropertyGroup>
    <NeutralLanguage>en</NeutralLanguage>
    <LangVersion>10.0</LangVersion>
    <!--<Nullable>enable</Nullable>-->
  </PropertyGroup>

  <!-- assembly signing -->
  <PropertyGroup>
    <SignAssembly>false</SignAssembly>
    <PublicSign>false</PublicSign>
    <DelaySign>false</DelaySign>
  </PropertyGroup>

  <!-- versioning and packaging -->
  <PropertyGroup>
    <!--
    https://cezarypiatek.github.io/post/setting-assembly-and-package-metadata/
    <Version>4.0.0-alpha.2</Version>
    -->

    <AssemblyVersion>5.3.0</AssemblyVersion>
    <FileVersion>5.3.0</FileVersion>
    <VersionPrefix>5.3.0</VersionPrefix>
    <VersionSuffix></VersionSuffix>

    <!-- bundle XML doc in NuGet package-->
    <GenerateDocumentationFile>true</GenerateDocumentationFile>

    <Authors>Hazelcast, Inc.</Authors>
    <Product>Hazelcast .NET Client</Product>
    <Company>Hazelcast, Inc.</Company>
    <Copyright>Copyright (C) 2008-2023 Hazelcast, Inc.</Copyright>
    <Title>Hazelcast .NET Client</Title>

    <!-- https://devblogs.microsoft.com/nuget/managing-package-owners/ -->
    <Owners>Hazelcast, Inc.</Owners>
  </PropertyGroup>

</Project>