// Copyright (c) 2008-2023, Hazelcast, Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

using System;
using System.Reflection;
using Thrift;

namespace Hazelcast.Testing.Remote
{
    /// <summary>
    /// Provides extension methods for the <see cref="ServerException"/> class.
    /// </summary>
    public static class ServerExceptionExtensions
    {
        private static FieldInfo _thriftMessage;
        private static FieldInfo _exceptionMessage;
        
        // NOTE
        //
        // the TException classes are generated by Thrift so we should not modify them,
        // yet their code is ugly C# which hides the actual Message property, which thus
        // remains empty... so we provide a equally ugly method to fix it.
        
        /// <summary>
        /// Fix the <see cref="TException"/> message so it appears correctly.
        /// </summary>
        /// <param name="thriftException">A <see cref="TException"/> instance.</param>
        public static void FixMessage(this TException thriftException)
        {
            _thriftMessage = thriftException.GetType().GetField("_message", BindingFlags.Instance | BindingFlags.NonPublic);
            _exceptionMessage ??= typeof(Exception).GetField("_message", BindingFlags.Instance | BindingFlags.NonPublic);
            if (_thriftMessage == null || _exceptionMessage == null) return; // bah
            _exceptionMessage.SetValue(thriftException, _thriftMessage.GetValue(thriftException));
        }
    }
}
