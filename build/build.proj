<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFrameworks>net462;net48;netcoreapp3.1;net5.0;net6.0;net7.0</TargetFrameworks>
    <Configurations>Debug;Release</Configurations>
  </PropertyGroup>
    
  <Import Project="AnalysisRules.props" />

  <ItemGroup>

    <!-- testing -->
    <PackageReference Include="NUnit.ConsoleRunner" Version="3.11.1" />

    <!--test coverage -->
    <!--
        see https://blog.jetbrains.com/dotnet/2019/08/26/cross-platform-dotcover-console-runner-whats-new-dotcover-2019-2/

        For .NET Framework (net462, net48) we use the dotCover.exe which comes with the CommandLineTools package, we
        cannot use the .NET Core approach because 'dotnet' does not support .NET Framework.
        For .NET Core+ (netcoreapp3.1, net5.0, net6.0, net7.0) we use 'dotnet dotcover' which relies on the DotNetCliTool, and that
        works cross-platform, both on Windows and Linux.

        Therefore, we need to restore both.
    -->

    <!-- non-Windows does not build for Framework and does not need this, Windows does -->
    <!-- version is detected by hz.ps1 automatically from this project file -->
    <PackageReference Include="JetBrains.dotCover.CommandLineTools" Version="2021.1.2" Condition=" '$(OS)' == 'Windows_NT' ">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>

    <!-- all platforms need this, but it is not compatible with net462, hence the condition -->
    <!-- BEWARE, version must align with Hazelcast.Net.Tests csproj! -->
    <PackageReference Include="JetBrains.dotCover.DotNetCliTool" Version="2021.1.2" Condition=" '$(TargetFramework)' != 'net462' and '$(TargetFramework)' != 'net48'">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>

  </ItemGroup>
</Project>